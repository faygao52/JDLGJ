version: '2.4'

services:
  jdlgj:
    image: jingyigao/jdlgj:${VERSION}
    environment:
      ENV: development
    build:
      context: .
      dockerfile: DockerfileWeb.Dockerfile
    volumes:
      - ./server:/go/src/app
    container_name: jdlgj
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 1m
      timeout: 30s
      retries: 3
      start_period: 330s
    restart: on-failure
    depends_on:
      postgres : 
        condition: service_healthy
    environment:
      ENV: development
      PORT: 8080
      PG_USER: postgres
      PG_PASSWORD: root
      PG_HOST: postgres
      PG_DATABSE: jdlgj_development
    networks:
      - development
    ports:
      - 8080:8080
  postgres:
    container_name: pg
    image: postgres:11.4
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
      POSTGRES_DB: jdlgj_development
    ports:
      - 5432:5432
    networks:
      - development
networks:
  development:
    name: development